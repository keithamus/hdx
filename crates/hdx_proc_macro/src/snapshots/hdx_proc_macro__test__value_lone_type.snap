---
source: crates/hdx_proc_macro/src/test.rs
expression: pretty
---
#[derive(Debug, Clone, PartialEq, Eq, PartialOrd, Ord, Hash)]
#[cfg_attr(feature = "serde", derive(serde::Serialize), serde())]
struct Foo(pub types::CSSInt);
#[automatically_derived]
impl<'a> ::hdx_parser::Peek<'a> for Foo {
    fn peek(p: &::hdx_parser::Parser<'a>) -> bool {
        use ::hdx_parser::Peek;
        p.peek::<types::CSSInt>()
    }
}
#[automatically_derived]
impl<'a> ::hdx_parser::Parse<'a> for Foo {
    fn parse(p: &mut ::hdx_parser::Parser<'a>) -> ::hdx_parser::Result<Self> {
        use ::hdx_parser::Parse;
        let val = p.parse::<types::CSSInt>()?;
        Ok(Self(val))
    }
}
#[automatically_derived]
impl ::hdx_parser::ToCursors for Foo {
    fn to_cursors(&self, s: &mut impl ::hdx_parser::CursorSink) {
        ::hdx_parser::ToCursors::to_cursors(&self.0, s);
    }
}
